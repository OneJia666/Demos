THREE.OBJMTLLoader=function(){};
THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(m,p,q,s,h,t){var r=this;(new THREE.MTLLoader(m.substr(0,m.lastIndexOf("/")+1))).load(q,function(h){h.preload();var l=new THREE.XHRLoader(r.manager);l.setCrossOrigin(this.crossOrigin);l.load(m,function(b){"lzs-base64"===p&&(b=LZString.decompressFromBase64(b));b=r.parse(b);b.traverse(function(b){if(b instanceof THREE.Mesh)for(var k=0;k<b.material.materials.length;k++)if(b.material.materials[k].name){var l=h.create(b.material.materials[k].name);
l&&(b.material.materials[k]=l)}});s(b)})})},parse:function(m,p){function q(a,b,c){return new THREE.Vector3(a,b,c)}function s(a,b){return new THREE.Vector2(a,b)}function h(a,b,c,d){a=new THREE.Face3(a,b,c,d);a.materialIndex=n.length-1;return a}function t(a){0<b.vertices.length&&(b.mergeVertices(),b.computeCentroids(),b.computeFaceNormals(),b.computeBoundingSphere(),l.add(v),b=new THREE.Geometry,n=[],k=new THREE.MeshFaceMaterial(n),v=new THREE.Mesh(b,k),c=0);void 0!==a&&(v.name=a)}function r(a){void 0!==
a&&(k=new THREE.MeshPhongMaterial,k.name=a,n.push(k))}for(var u=new THREE.Object3D,l=u,b=new THREE.Geometry,n=[],k=new THREE.MeshFaceMaterial(n),v=new THREE.Mesh(b,k),d=[],c=0,f=[],g=[],y=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,z=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,A=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,B=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,C=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,D=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,
E=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,x=m.split("\n"),w=0;w<x.length;w++){var e=x[w],e=e.trim(),a;0!==e.length&&"#"!==e.charAt(0)&&(null!==(a=y.exec(e))?d.push(q(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]))):null!==(a=z.exec(e))?f.push(q(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]))):null!==(a=A.exec(e))?g.push(s(parseFloat(a[1]),parseFloat(a[2]))):null!==(a=B.exec(e))?void 0===a[4]?(b.vertices.push(d[parseInt(a[1])-1],d[parseInt(a[2])-1],d[parseInt(a[3])-
1]),b.faces.push(h(c++,c++,c++))):(b.vertices.push(d[parseInt(a[1])-1],d[parseInt(a[2])-1],d[parseInt(a[3])-1],d[parseInt(a[4])-1]),b.faces.push(h(c,c+1,c+3)),b.faces.push(h(c+1,c+2,c+3)),c+=4):null!==(a=C.exec(e))?void 0===a[10]?(b.vertices.push(d[parseInt(a[2])-1],d[parseInt(a[5])-1],d[parseInt(a[8])-1]),b.faces.push(h(c++,c++,c++)),b.faceVertexUvs[0].push([g[parseInt(a[3])-1],g[parseInt(a[6])-1],g[parseInt(a[9])-1]])):(b.vertices.push(d[parseInt(a[2])-1],d[parseInt(a[5])-1],d[parseInt(a[8])-1],
d[parseInt(a[11])-1]),b.faces.push(h(c,c+1,c+3)),b.faceVertexUvs[0].push([g[parseInt(a[3])-1],g[parseInt(a[6])-1],g[parseInt(a[12])-1]]),b.faces.push(h(c+1,c+2,c+3)),b.faceVertexUvs[0].push([g[parseInt(a[6])-1],g[parseInt(a[9])-1],g[parseInt(a[12])-1]]),c+=4):null!==(a=D.exec(e))?void 0===a[13]?(b.vertices.push(d[parseInt(a[2])-1],d[parseInt(a[6])-1],d[parseInt(a[10])-1]),b.faces.push(h(c++,c++,c++,[f[parseInt(a[4])-1],f[parseInt(a[8])-1],f[parseInt(a[12])-1]])),b.faceVertexUvs[0].push([g[parseInt(a[3])-
1],g[parseInt(a[7])-1],g[parseInt(a[11])-1]])):(b.vertices.push(d[parseInt(a[2])-1],d[parseInt(a[6])-1],d[parseInt(a[10])-1],d[parseInt(a[14])-1]),b.faces.push(h(c,c+1,c+3,[f[parseInt(a[4])-1],f[parseInt(a[8])-1],f[parseInt(a[16])-1]])),b.faceVertexUvs[0].push([g[parseInt(a[3])-1],g[parseInt(a[7])-1],g[parseInt(a[15])-1]]),b.faces.push(h(c+1,c+2,c+3,[f[parseInt(a[8])-1],f[parseInt(a[12])-1],f[parseInt(a[16])-1]])),b.faceVertexUvs[0].push([g[parseInt(a[7])-1],g[parseInt(a[11])-1],g[parseInt(a[15])-
1]]),c+=4):null!==(a=E.exec(e))?void 0===a[10]?(b.vertices.push(d[parseInt(a[2])-1],d[parseInt(a[5])-1],d[parseInt(a[8])-1]),b.faces.push(h(c++,c++,c++,[f[parseInt(a[3])-1],f[parseInt(a[6])-1],f[parseInt(a[9])-1]]))):(b.vertices.push(d[parseInt(a[2])-1],d[parseInt(a[5])-1],d[parseInt(a[8])-1],d[parseInt(a[11])-1]),b.faces.push(h(c,c+1,c+3,[f[parseInt(a[3])-1],f[parseInt(a[6])-1],f[parseInt(a[12])-1]])),b.faces.push(h(c+1,c+2,c+3,[f[parseInt(a[6])-1],f[parseInt(a[9])-1],f[parseInt(a[12])-1]])),c+=
4):/^o /.test(e)?(l=new THREE.Object3D,l.name=e.substring(2).trim(),u.add(l)):/^g /.test(e)?t(e.substring(2).trim()):/^usemtl /.test(e)?r(e.substring(7).trim()):/^mtllib /.test(e)?p&&(e=e.substring(7),e=e.trim(),p(e)):/^s /.test(e)||console.log("THREE.OBJMTLLoader: Unhandled line "+e))}t(void 0);return u}};THREE.EventDispatcher.prototype.apply(THREE.OBJMTLLoader.prototype);
